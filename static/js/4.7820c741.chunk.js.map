{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/DialogsItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength30","maxLengthCreator","DialogsReduxForm","reduxForm","form","props","className","s","dialogForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","DialogItem","path","id","dialogs_users_name","to","Message","user_message","message","Dialogs","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogs_users","values","addMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","Component"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,mBAAqB,oCAAoC,SAAW,0BAA0B,aAAe,gC,oBCAjND,EAAOC,QAAU,CAAC,WAAa,qC,8HCKzBC,EAAcC,YAAiB,IAkBxBC,EAAmBC,YAAU,CACtCC,KAAM,yBADsBD,EAhBT,SAACE,GACpB,OACI,uBACIC,UAAWC,IAAEC,WACbC,SAAUJ,EAAMK,aAFpB,UAGI,cAACC,EAAA,EAAD,CACIC,KAAK,iBACLC,UAAWC,IACXC,YAAY,oBACZC,SAAU,CAACC,IAAUjB,KAEzB,gD,0BCPGkB,EATI,SAACb,GAChB,IAAIc,EAAO,YAAcd,EAAMe,GAC/B,OACI,qBAAKd,UAAWC,IAAEc,mBAAlB,SACI,cAAC,IAAD,CAASC,GAAIH,EAAb,SAAoBd,EAAMO,UCGvBW,EARC,SAAClB,GACb,OACI,qBAAKC,UAAWC,IAAEiB,aAAlB,SACKnB,EAAMoB,WC4BJC,EA3BC,SAACrB,GAEb,IAAIsB,EAAkBtB,EAAMuB,QAAQC,KAAK,SAACC,GACtC,OAAO,cAAC,EAAD,CAAYV,GAAIU,EAAEV,GAAIR,KAAMkB,EAAElB,MAAWkB,EAAEV,OAGlDW,EAAmB1B,EAAM2B,SAASH,KAAK,SAACI,GACxC,OAAO,cAAC,EAAD,CAASb,GAAIa,EAAEb,GAAIK,QAASQ,EAAER,SAAcQ,EAAEb,OAOzD,OACI,sBAAKd,UAAWC,IAAEqB,QAAlB,UACI,qBAAKtB,UAAWC,IAAE2B,cAAlB,SACKP,IAEL,sBAAKrB,UAAWC,IAAEyB,SAAlB,UACKD,EACD,cAAC7B,EAAD,CAAkBO,SAXV,SAAC0B,GACjB9B,EAAM+B,WAAWD,EAAOE,0B,uBCZ5BC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SCORE,sBACXC,aARoB,SAACJ,GACrB,MAAO,CACHX,QAASW,EAAMK,YAAYhB,QAC3BI,SAAUO,EAAMK,YAAYZ,YAKP,CAAEI,kBDLC,SAACS,GAW7B,OAFqCF,YAAQL,EAARK,EAPX,SAACtC,GACvB,OAAKA,EAAMmC,OAGJ,cAACK,EAAD,eAAexC,IAFX,cAAC,IAAD,CAAUiB,GAAI,gBCAlBoB,CAGbhB","file":"static/js/4.7820c741.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3PlNM\",\"dialogs_users\":\"Dialogs_dialogs_users__3gPTG\",\"dialogs_users_name\":\"Dialogs_dialogs_users_name__ZEguD\",\"messages\":\"Dialogs_messages__2e9TB\",\"user_message\":\"Dialogs_user_message__1Vf4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogForm\":\"AddMessageForm_dialogForm__2LTME\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport s from './AddMessageForm.module.css';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form \r\n            className={s.dialogForm} \r\n            onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name='newMessageBody'\r\n                component={Textarea}\r\n                placeholder='Write new message'\r\n                validate={[required, maxLength30]}\r\n            />\r\n            <button>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const DialogsReduxForm = reduxForm({\r\n    form: 'dialogsAddMessageForm'\r\n})(AddMessageForm);\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialogs_users_name}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.user_message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { DialogsReduxForm} from './AddMessageForm/AddMessageForm';\r\nimport DialogItem from './DialogsItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport s from './Dialogs.module.css';\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let dialogsElements = props.dialogs.map ((d) => {\r\n        return <DialogItem id={d.id} name={d.name} key={d.id} />\r\n    });\r\n    \r\n    let messagesElements = props.messages.map ((m) => {\r\n        return <Message id={m.id} message={m.message} key={m.id} />\r\n    });\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_users}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <DialogsReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) {\r\n            return <Redirect to={'/login'} />\r\n        };\r\n        return <Component {...props} />\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport Dialogs from './Dialogs';\r\nimport { addMessage } from '../../redux/dialogsReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage }),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}